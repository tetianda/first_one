name: Docker Image CI

on:
  push:
    branches:
    - '**'
  pull_request:
    branches: [ "main" ]

jobs:
  # Initializing
  init:
      runs-on: ubuntu-latest
      steps:
      - name: Dump GitHub context
        id: ss
        env:
            GITHUB_CONTEXT: ${{ tojson(github) }}
            ENVIRONMENT: ${{ github.event.deployment.environment }}
        run: |
            REPO=$(echo "$GITHUB_CONTEXT" | jq -r .repository)
            REPO=$(echo "$REPO" | tr '[:upper:]' '[:lower:]')
            SHA=$(echo "$GITHUB_CONTEXT" | jq -r .sha)
            REPOSHA=$(echo $REPO:$SHA)
            echo $ENVIRONMENT
            echo $REPO
            echo $SHA
            echo $REPOSHA 

            echo "::set-output name=repo::$REPO"
            echo "::set-output name=sha::$SHA"
            echo "::set-output name=reposha::$REPOSHA"
      outputs:
        repo: ${{ steps.ss.outputs.repo }}
        sha: ${{ steps.ss.outputs.sha }}
        reposha: ${{ steps.ss.outputs.reposha }}

  # Building
  #build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v3
#    - name: Build the Docker image
#      run: docker build . --file Dockerfile --tag $("$GITHUB_CONTEXT" | jq .repository):$("$GITHUB_CONTEXT" | jq .sha)
  
  # Pushing
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{needs.init.outputs.repo}}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{needs.init.outputs.reposha}}
          #tags: $("$GITHUB_CONTEXT" | jq .repository):$("$GITHUB_CONTEXT" | jq .sha)
          #labels: ${{ steps.meta.outputs.labels }}
